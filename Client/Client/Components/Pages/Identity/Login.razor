@page "/login"
@using Client.Services.Interfaces
@inject IAuthService AuthService
@inject NavigationManager Navigation
@layout EmptyLayout
@inherits AnonymousPage

<article class="container flex-center h-100dvh gap-5 col-sm">
    <LogoSection/>
    <section id="form-section" class="w-100">
        <EditForm @ref="_form" Model="Input" OnValidSubmit="LoginUserAsync">
            <DataAnnotationsValidator/>

            <LabeledInput Label="Email"
                          InputId="Input.Email"
                          @bind-Value="@Input.Email"
                          AutoComplete="username"
                          Placeholder="name@example.com"
                          For="() => Input.Email"/>

            <LabeledInput Label="Password"
                          InputId="Input.Password"
                          InputType="password"
                          @bind-Value="@Input.Password"
                          AutoComplete="current-password"
                          Placeholder="Enter your password"
                          For="() => Input.Password"/>

            @foreach (var error in _requestResult.ErrorList)
            {
                <div class="invalid_validation_message">@error</div>
            }

            <div class="btn-vertical-group mt-1">
                <Button IsLoading="_loginProcessing"
                        OnClick="LoginUserAsync"
                        Type="submit"
                        Text="Log in" />

                <Button OnClick="NavigateToRegistration" Color="Color.Secondary" Text="Registration"/>
            </div>
        </EditForm>
    </section>
</article>